// Funkcja do dodawania macierzy
std::vector<std::vector<int>> addMatrices(const std::vector<std::vector<int>>& matrix1, const std::vector<std::vector<int>>& matrix2) {
    std::vector<std::vector<int>> result;

    // Sprawdzanie poprawności wymiarów macierzy
    if (matrix1.size() != matrix2.size() || matrix1[0].size() != matrix2[0].size()) {
        std::cout << "Błędne wymiary macierzy. Nie można dodać." << std::endl;
        return result;
    }

    int rows = matrix1.size();
    int cols = matrix1[0].size();

    // Inicjalizacja macierzy wynikowej
    result.resize(rows, std::vector<int>(cols, 0));

    // Dodawanie macierzy
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i][j] = matrix1[i][j] + matrix2[i][j];
        }
    }

    return result;
}

// Funkcja do wyświetlania macierzy
void printMatrix(const std::vector<std::vector<int>>& matrix) {
    for (const auto& row : matrix) {
        for (const auto& element : row) {
            std::cout << element << " ";
        }
        std::cout << std::endl;
    }
}
